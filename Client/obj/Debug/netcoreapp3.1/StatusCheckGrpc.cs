// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Grpc/StatusCheck.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace StatusCheck {
  public static partial class StatusCheck
  {
    static readonly string __ServiceName = "StatusCheck.StatusCheck";

    static readonly grpc::Marshaller<global::StatusCheck.StatusRequest> __Marshaller_StatusCheck_StatusRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::StatusCheck.StatusRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::StatusCheck.StatusReply> __Marshaller_StatusCheck_StatusReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::StatusCheck.StatusReply.Parser.ParseFrom);

    static readonly grpc::Method<global::StatusCheck.StatusRequest, global::StatusCheck.StatusReply> __Method_RequestStatus = new grpc::Method<global::StatusCheck.StatusRequest, global::StatusCheck.StatusReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RequestStatus",
        __Marshaller_StatusCheck_StatusRequest,
        __Marshaller_StatusCheck_StatusReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::StatusCheck.StatusCheckReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for StatusCheck</summary>
    public partial class StatusCheckClient : grpc::ClientBase<StatusCheckClient>
    {
      /// <summary>Creates a new client for StatusCheck</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public StatusCheckClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for StatusCheck that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public StatusCheckClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected StatusCheckClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected StatusCheckClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::StatusCheck.StatusReply RequestStatus(global::StatusCheck.StatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RequestStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::StatusCheck.StatusReply RequestStatus(global::StatusCheck.StatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RequestStatus, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::StatusCheck.StatusReply> RequestStatusAsync(global::StatusCheck.StatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RequestStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::StatusCheck.StatusReply> RequestStatusAsync(global::StatusCheck.StatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RequestStatus, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override StatusCheckClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new StatusCheckClient(configuration);
      }
    }

  }
}
#endregion
