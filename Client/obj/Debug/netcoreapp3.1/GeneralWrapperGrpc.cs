// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/GeneralWrapper.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Generalwrapper {
  public static partial class GeneralWrapperService
  {
    static readonly string __ServiceName = "generalwrapper.GeneralWrapperService";

    static readonly grpc::Marshaller<global::Generalwrapper.ContextRequest> __Marshaller_generalwrapper_ContextRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generalwrapper.ContextRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generalwrapper.ModuleContext> __Marshaller_generalwrapper_ModuleContext = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generalwrapper.ModuleContext.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generalwrapper.StatusRequest> __Marshaller_generalwrapper_StatusRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generalwrapper.StatusRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generalwrapper.Evaluation> __Marshaller_generalwrapper_Evaluation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generalwrapper.Evaluation.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generalwrapper.SystemCommand> __Marshaller_generalwrapper_SystemCommand = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generalwrapper.SystemCommand.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Generalwrapper.Confirmation> __Marshaller_generalwrapper_Confirmation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Generalwrapper.Confirmation.Parser.ParseFrom);

    static readonly grpc::Method<global::Generalwrapper.ContextRequest, global::Generalwrapper.ModuleContext> __Method_RequestModuleContext = new grpc::Method<global::Generalwrapper.ContextRequest, global::Generalwrapper.ModuleContext>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RequestModuleContext",
        __Marshaller_generalwrapper_ContextRequest,
        __Marshaller_generalwrapper_ModuleContext);

    static readonly grpc::Method<global::Generalwrapper.StatusRequest, global::Generalwrapper.Evaluation> __Method_RequestGeneralHealthCheck = new grpc::Method<global::Generalwrapper.StatusRequest, global::Generalwrapper.Evaluation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RequestGeneralHealthCheck",
        __Marshaller_generalwrapper_StatusRequest,
        __Marshaller_generalwrapper_Evaluation);

    static readonly grpc::Method<global::Generalwrapper.SystemCommand, global::Generalwrapper.Confirmation> __Method_RunSystemCommand = new grpc::Method<global::Generalwrapper.SystemCommand, global::Generalwrapper.Confirmation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RunSystemCommand",
        __Marshaller_generalwrapper_SystemCommand,
        __Marshaller_generalwrapper_Confirmation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Generalwrapper.GeneralWrapperReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for GeneralWrapperService</summary>
    public partial class GeneralWrapperServiceClient : grpc::ClientBase<GeneralWrapperServiceClient>
    {
      /// <summary>Creates a new client for GeneralWrapperService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GeneralWrapperServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GeneralWrapperService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GeneralWrapperServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GeneralWrapperServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GeneralWrapperServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Generalwrapper.ModuleContext RequestModuleContext(global::Generalwrapper.ContextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RequestModuleContext(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Generalwrapper.ModuleContext RequestModuleContext(global::Generalwrapper.ContextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RequestModuleContext, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Generalwrapper.ModuleContext> RequestModuleContextAsync(global::Generalwrapper.ContextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RequestModuleContextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Generalwrapper.ModuleContext> RequestModuleContextAsync(global::Generalwrapper.ContextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RequestModuleContext, null, options, request);
      }
      public virtual global::Generalwrapper.Evaluation RequestGeneralHealthCheck(global::Generalwrapper.StatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RequestGeneralHealthCheck(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Generalwrapper.Evaluation RequestGeneralHealthCheck(global::Generalwrapper.StatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RequestGeneralHealthCheck, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Generalwrapper.Evaluation> RequestGeneralHealthCheckAsync(global::Generalwrapper.StatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RequestGeneralHealthCheckAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Generalwrapper.Evaluation> RequestGeneralHealthCheckAsync(global::Generalwrapper.StatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RequestGeneralHealthCheck, null, options, request);
      }
      public virtual global::Generalwrapper.Confirmation RunSystemCommand(global::Generalwrapper.SystemCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunSystemCommand(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Generalwrapper.Confirmation RunSystemCommand(global::Generalwrapper.SystemCommand request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RunSystemCommand, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Generalwrapper.Confirmation> RunSystemCommandAsync(global::Generalwrapper.SystemCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunSystemCommandAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Generalwrapper.Confirmation> RunSystemCommandAsync(global::Generalwrapper.SystemCommand request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RunSystemCommand, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GeneralWrapperServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GeneralWrapperServiceClient(configuration);
      }
    }

  }
}
#endregion
