// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/Minimega/ModuleSpecific.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Modulespecific {

  /// <summary>Holder for reflection information generated from proto/Minimega/ModuleSpecific.proto</summary>
  public static partial class ModuleSpecificReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/Minimega/ModuleSpecific.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ModuleSpecificReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNwcm90by9NaW5pbWVnYS9Nb2R1bGVTcGVjaWZpYy5wcm90bxIObW9kdWxl",
            "c3BlY2lmaWMioQEKDUNvbmZpZ3VyYXRpb24SLAoJdmxhblNwZWNzGAEgASgL",
            "MhkubW9kdWxlc3BlY2lmaWMuVmxhblNwZWNzEioKCHRhcFNwZWNzGAIgASgL",
            "MhgubW9kdWxlc3BlY2lmaWMuVGFwU3BlY3MSNgoOb3JjaGVzdHJhdGlvbnMY",
            "AyABKAsyHi5tb2R1bGVzcGVjaWZpYy5PcmNoZXN0cmF0aW9ucyKHAgoJVmxh",
            "blNwZWNzEhYKDm1hbmFnZW1lbnRWTEFOGAEgASgJEkEKDHNuaWZmZXJWTEFO",
            "cxgCIAMoCzIrLm1vZHVsZXNwZWNpZmljLlZsYW5TcGVjcy5TbmlmZmVyVkxB",
            "TnNFbnRyeRI5CghoaWxWTEFOcxgDIAMoCzInLm1vZHVsZXNwZWNpZmljLlZs",
            "YW5TcGVjcy5IaWxWTEFOc0VudHJ5GjMKEVNuaWZmZXJWTEFOc0VudHJ5EgsK",
            "A2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaLwoNSGlsVkxBTnNFbnRy",
            "eRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIpgBCghUYXBTcGVj",
            "cxIWCg5uZXRmbG93VGFwUG9ydBgBIAEoCRIUCgxuZXRmbG93VGFwSVAYAiAB",
            "KAkSFAoMcG93ZXJUYXBQb3J0GAMgASgJEhYKDnNuaWZmZXJUYXBOYW1lGAQg",
            "ASgJEhgKEHB1Ymxpc2hlclRhcE5hbWUYBSABKAkSFgoOcHVibGlzaGVyVGFw",
            "SVAYBiABKAkiIgoOT3JjaGVzdHJhdGlvbnMSEAoIbG9jYXRpb24YASABKAki",
            "IAoNU3RhdHVzUmVxdWVzdBIPCgdtZXNzYWdlGAEgASgJIlcKEkRldGFpbGVk",
            "RXZhbHVhdGlvbhIgChhtaW5pbWVnYVByb2Nlc3NJc1J1bm5pbmcYASABKAgS",
            "HwoXbWluaXdlYlByb2Nlc3NJc1J1bm5pbmcYAiABKAgiOgoTQ29uZmlndXJh",
            "dGlvblVwZGF0ZRIQCghmaWxlUGF0aBgBIAEoCRIRCgluYW1lc3BhY2UYAiAB",
            "KAkiHQoNQ3VzdG9tQ29tbWFuZBIMCgRib2R5GAEgASgJIjcKDENvbmZpcm1h",
            "dGlvbhIRCgljb21wbGV0ZWQYASABKAgSFAoMZXJyb3JNZXNzYWdlGAIgASgJ",
            "MvQCChRNb2R1bGVTcGVjZmljU2VydmljZRJKCglDb25maWd1cmUSHS5tb2R1",
            "bGVzcGVjaWZpYy5Db25maWd1cmF0aW9uGhwubW9kdWxlc3BlY2lmaWMuQ29u",
            "ZmlybWF0aW9uIgASYQoaUmVxdWVzdERldGFpbGVkSGVhbHRoQ2hlY2sSHS5t",
            "b2R1bGVzcGVjaWZpYy5TdGF0dXNSZXF1ZXN0GiIubW9kdWxlc3BlY2lmaWMu",
            "RGV0YWlsZWRFdmFsdWF0aW9uIgASWgoTVXBkYXRlQ29uZmlndXJhdGlvbhIj",
            "Lm1vZHVsZXNwZWNpZmljLkNvbmZpZ3VyYXRpb25VcGRhdGUaHC5tb2R1bGVz",
            "cGVjaWZpYy5Db25maXJtYXRpb24iABJRChBSdW5DdXN0b21Db21tYW5kEh0u",
            "bW9kdWxlc3BlY2lmaWMuQ3VzdG9tQ29tbWFuZBocLm1vZHVsZXNwZWNpZmlj",
            "LkNvbmZpcm1hdGlvbiIAQiFaH2dycGMvZ29sYW5nU2VydmVyL3Byb3RvL21v",
            "ZHVsZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Modulespecific.Configuration), global::Modulespecific.Configuration.Parser, new[]{ "VlanSpecs", "TapSpecs", "Orchestrations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modulespecific.VlanSpecs), global::Modulespecific.VlanSpecs.Parser, new[]{ "ManagementVLAN", "SnifferVLANs", "HilVLANs" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modulespecific.TapSpecs), global::Modulespecific.TapSpecs.Parser, new[]{ "NetflowTapPort", "NetflowTapIP", "PowerTapPort", "SnifferTapName", "PublisherTapName", "PublisherTapIP" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modulespecific.Orchestrations), global::Modulespecific.Orchestrations.Parser, new[]{ "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modulespecific.StatusRequest), global::Modulespecific.StatusRequest.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modulespecific.DetailedEvaluation), global::Modulespecific.DetailedEvaluation.Parser, new[]{ "MinimegaProcessIsRunning", "MiniwebProcessIsRunning" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modulespecific.ConfigurationUpdate), global::Modulespecific.ConfigurationUpdate.Parser, new[]{ "FilePath", "Namespace" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modulespecific.CustomCommand), global::Modulespecific.CustomCommand.Parser, new[]{ "Body" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Modulespecific.Confirmation), global::Modulespecific.Confirmation.Parser, new[]{ "Completed", "ErrorMessage" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Configuration : pb::IMessage<Configuration> {
    private static readonly pb::MessageParser<Configuration> _parser = new pb::MessageParser<Configuration>(() => new Configuration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Configuration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modulespecific.ModuleSpecificReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Configuration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Configuration(Configuration other) : this() {
      vlanSpecs_ = other.vlanSpecs_ != null ? other.vlanSpecs_.Clone() : null;
      tapSpecs_ = other.tapSpecs_ != null ? other.tapSpecs_.Clone() : null;
      orchestrations_ = other.orchestrations_ != null ? other.orchestrations_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Configuration Clone() {
      return new Configuration(this);
    }

    /// <summary>Field number for the "vlanSpecs" field.</summary>
    public const int VlanSpecsFieldNumber = 1;
    private global::Modulespecific.VlanSpecs vlanSpecs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modulespecific.VlanSpecs VlanSpecs {
      get { return vlanSpecs_; }
      set {
        vlanSpecs_ = value;
      }
    }

    /// <summary>Field number for the "tapSpecs" field.</summary>
    public const int TapSpecsFieldNumber = 2;
    private global::Modulespecific.TapSpecs tapSpecs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modulespecific.TapSpecs TapSpecs {
      get { return tapSpecs_; }
      set {
        tapSpecs_ = value;
      }
    }

    /// <summary>Field number for the "orchestrations" field.</summary>
    public const int OrchestrationsFieldNumber = 3;
    private global::Modulespecific.Orchestrations orchestrations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Modulespecific.Orchestrations Orchestrations {
      get { return orchestrations_; }
      set {
        orchestrations_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Configuration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Configuration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VlanSpecs, other.VlanSpecs)) return false;
      if (!object.Equals(TapSpecs, other.TapSpecs)) return false;
      if (!object.Equals(Orchestrations, other.Orchestrations)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (vlanSpecs_ != null) hash ^= VlanSpecs.GetHashCode();
      if (tapSpecs_ != null) hash ^= TapSpecs.GetHashCode();
      if (orchestrations_ != null) hash ^= Orchestrations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (vlanSpecs_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VlanSpecs);
      }
      if (tapSpecs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TapSpecs);
      }
      if (orchestrations_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Orchestrations);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (vlanSpecs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VlanSpecs);
      }
      if (tapSpecs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TapSpecs);
      }
      if (orchestrations_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Orchestrations);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Configuration other) {
      if (other == null) {
        return;
      }
      if (other.vlanSpecs_ != null) {
        if (vlanSpecs_ == null) {
          VlanSpecs = new global::Modulespecific.VlanSpecs();
        }
        VlanSpecs.MergeFrom(other.VlanSpecs);
      }
      if (other.tapSpecs_ != null) {
        if (tapSpecs_ == null) {
          TapSpecs = new global::Modulespecific.TapSpecs();
        }
        TapSpecs.MergeFrom(other.TapSpecs);
      }
      if (other.orchestrations_ != null) {
        if (orchestrations_ == null) {
          Orchestrations = new global::Modulespecific.Orchestrations();
        }
        Orchestrations.MergeFrom(other.Orchestrations);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (vlanSpecs_ == null) {
              VlanSpecs = new global::Modulespecific.VlanSpecs();
            }
            input.ReadMessage(VlanSpecs);
            break;
          }
          case 18: {
            if (tapSpecs_ == null) {
              TapSpecs = new global::Modulespecific.TapSpecs();
            }
            input.ReadMessage(TapSpecs);
            break;
          }
          case 26: {
            if (orchestrations_ == null) {
              Orchestrations = new global::Modulespecific.Orchestrations();
            }
            input.ReadMessage(Orchestrations);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VlanSpecs : pb::IMessage<VlanSpecs> {
    private static readonly pb::MessageParser<VlanSpecs> _parser = new pb::MessageParser<VlanSpecs>(() => new VlanSpecs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VlanSpecs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modulespecific.ModuleSpecificReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VlanSpecs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VlanSpecs(VlanSpecs other) : this() {
      managementVLAN_ = other.managementVLAN_;
      snifferVLANs_ = other.snifferVLANs_.Clone();
      hilVLANs_ = other.hilVLANs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VlanSpecs Clone() {
      return new VlanSpecs(this);
    }

    /// <summary>Field number for the "managementVLAN" field.</summary>
    public const int ManagementVLANFieldNumber = 1;
    private string managementVLAN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ManagementVLAN {
      get { return managementVLAN_; }
      set {
        managementVLAN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "snifferVLANs" field.</summary>
    public const int SnifferVLANsFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_snifferVLANs_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> snifferVLANs_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> SnifferVLANs {
      get { return snifferVLANs_; }
    }

    /// <summary>Field number for the "hilVLANs" field.</summary>
    public const int HilVLANsFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_hilVLANs_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> hilVLANs_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> HilVLANs {
      get { return hilVLANs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VlanSpecs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VlanSpecs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ManagementVLAN != other.ManagementVLAN) return false;
      if (!SnifferVLANs.Equals(other.SnifferVLANs)) return false;
      if (!HilVLANs.Equals(other.HilVLANs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ManagementVLAN.Length != 0) hash ^= ManagementVLAN.GetHashCode();
      hash ^= SnifferVLANs.GetHashCode();
      hash ^= HilVLANs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ManagementVLAN.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ManagementVLAN);
      }
      snifferVLANs_.WriteTo(output, _map_snifferVLANs_codec);
      hilVLANs_.WriteTo(output, _map_hilVLANs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ManagementVLAN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ManagementVLAN);
      }
      size += snifferVLANs_.CalculateSize(_map_snifferVLANs_codec);
      size += hilVLANs_.CalculateSize(_map_hilVLANs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VlanSpecs other) {
      if (other == null) {
        return;
      }
      if (other.ManagementVLAN.Length != 0) {
        ManagementVLAN = other.ManagementVLAN;
      }
      snifferVLANs_.Add(other.snifferVLANs_);
      hilVLANs_.Add(other.hilVLANs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ManagementVLAN = input.ReadString();
            break;
          }
          case 18: {
            snifferVLANs_.AddEntriesFrom(input, _map_snifferVLANs_codec);
            break;
          }
          case 26: {
            hilVLANs_.AddEntriesFrom(input, _map_hilVLANs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TapSpecs : pb::IMessage<TapSpecs> {
    private static readonly pb::MessageParser<TapSpecs> _parser = new pb::MessageParser<TapSpecs>(() => new TapSpecs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TapSpecs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modulespecific.ModuleSpecificReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TapSpecs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TapSpecs(TapSpecs other) : this() {
      netflowTapPort_ = other.netflowTapPort_;
      netflowTapIP_ = other.netflowTapIP_;
      powerTapPort_ = other.powerTapPort_;
      snifferTapName_ = other.snifferTapName_;
      publisherTapName_ = other.publisherTapName_;
      publisherTapIP_ = other.publisherTapIP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TapSpecs Clone() {
      return new TapSpecs(this);
    }

    /// <summary>Field number for the "netflowTapPort" field.</summary>
    public const int NetflowTapPortFieldNumber = 1;
    private string netflowTapPort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetflowTapPort {
      get { return netflowTapPort_; }
      set {
        netflowTapPort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "netflowTapIP" field.</summary>
    public const int NetflowTapIPFieldNumber = 2;
    private string netflowTapIP_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetflowTapIP {
      get { return netflowTapIP_; }
      set {
        netflowTapIP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "powerTapPort" field.</summary>
    public const int PowerTapPortFieldNumber = 3;
    private string powerTapPort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PowerTapPort {
      get { return powerTapPort_; }
      set {
        powerTapPort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "snifferTapName" field.</summary>
    public const int SnifferTapNameFieldNumber = 4;
    private string snifferTapName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SnifferTapName {
      get { return snifferTapName_; }
      set {
        snifferTapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "publisherTapName" field.</summary>
    public const int PublisherTapNameFieldNumber = 5;
    private string publisherTapName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublisherTapName {
      get { return publisherTapName_; }
      set {
        publisherTapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "publisherTapIP" field.</summary>
    public const int PublisherTapIPFieldNumber = 6;
    private string publisherTapIP_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublisherTapIP {
      get { return publisherTapIP_; }
      set {
        publisherTapIP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TapSpecs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TapSpecs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetflowTapPort != other.NetflowTapPort) return false;
      if (NetflowTapIP != other.NetflowTapIP) return false;
      if (PowerTapPort != other.PowerTapPort) return false;
      if (SnifferTapName != other.SnifferTapName) return false;
      if (PublisherTapName != other.PublisherTapName) return false;
      if (PublisherTapIP != other.PublisherTapIP) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetflowTapPort.Length != 0) hash ^= NetflowTapPort.GetHashCode();
      if (NetflowTapIP.Length != 0) hash ^= NetflowTapIP.GetHashCode();
      if (PowerTapPort.Length != 0) hash ^= PowerTapPort.GetHashCode();
      if (SnifferTapName.Length != 0) hash ^= SnifferTapName.GetHashCode();
      if (PublisherTapName.Length != 0) hash ^= PublisherTapName.GetHashCode();
      if (PublisherTapIP.Length != 0) hash ^= PublisherTapIP.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetflowTapPort.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetflowTapPort);
      }
      if (NetflowTapIP.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NetflowTapIP);
      }
      if (PowerTapPort.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PowerTapPort);
      }
      if (SnifferTapName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SnifferTapName);
      }
      if (PublisherTapName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PublisherTapName);
      }
      if (PublisherTapIP.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PublisherTapIP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetflowTapPort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetflowTapPort);
      }
      if (NetflowTapIP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetflowTapIP);
      }
      if (PowerTapPort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PowerTapPort);
      }
      if (SnifferTapName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SnifferTapName);
      }
      if (PublisherTapName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublisherTapName);
      }
      if (PublisherTapIP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublisherTapIP);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TapSpecs other) {
      if (other == null) {
        return;
      }
      if (other.NetflowTapPort.Length != 0) {
        NetflowTapPort = other.NetflowTapPort;
      }
      if (other.NetflowTapIP.Length != 0) {
        NetflowTapIP = other.NetflowTapIP;
      }
      if (other.PowerTapPort.Length != 0) {
        PowerTapPort = other.PowerTapPort;
      }
      if (other.SnifferTapName.Length != 0) {
        SnifferTapName = other.SnifferTapName;
      }
      if (other.PublisherTapName.Length != 0) {
        PublisherTapName = other.PublisherTapName;
      }
      if (other.PublisherTapIP.Length != 0) {
        PublisherTapIP = other.PublisherTapIP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetflowTapPort = input.ReadString();
            break;
          }
          case 18: {
            NetflowTapIP = input.ReadString();
            break;
          }
          case 26: {
            PowerTapPort = input.ReadString();
            break;
          }
          case 34: {
            SnifferTapName = input.ReadString();
            break;
          }
          case 42: {
            PublisherTapName = input.ReadString();
            break;
          }
          case 50: {
            PublisherTapIP = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Orchestrations : pb::IMessage<Orchestrations> {
    private static readonly pb::MessageParser<Orchestrations> _parser = new pb::MessageParser<Orchestrations>(() => new Orchestrations());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Orchestrations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modulespecific.ModuleSpecificReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Orchestrations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Orchestrations(Orchestrations other) : this() {
      location_ = other.location_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Orchestrations Clone() {
      return new Orchestrations(this);
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 1;
    private string location_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Orchestrations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Orchestrations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Location != other.Location) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Location.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Orchestrations other) {
      if (other == null) {
        return;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Location = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StatusRequest : pb::IMessage<StatusRequest> {
    private static readonly pb::MessageParser<StatusRequest> _parser = new pb::MessageParser<StatusRequest>(() => new StatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modulespecific.ModuleSpecificReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusRequest(StatusRequest other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusRequest Clone() {
      return new StatusRequest(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusRequest other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DetailedEvaluation : pb::IMessage<DetailedEvaluation> {
    private static readonly pb::MessageParser<DetailedEvaluation> _parser = new pb::MessageParser<DetailedEvaluation>(() => new DetailedEvaluation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetailedEvaluation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modulespecific.ModuleSpecificReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedEvaluation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedEvaluation(DetailedEvaluation other) : this() {
      minimegaProcessIsRunning_ = other.minimegaProcessIsRunning_;
      miniwebProcessIsRunning_ = other.miniwebProcessIsRunning_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailedEvaluation Clone() {
      return new DetailedEvaluation(this);
    }

    /// <summary>Field number for the "minimegaProcessIsRunning" field.</summary>
    public const int MinimegaProcessIsRunningFieldNumber = 1;
    private bool minimegaProcessIsRunning_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MinimegaProcessIsRunning {
      get { return minimegaProcessIsRunning_; }
      set {
        minimegaProcessIsRunning_ = value;
      }
    }

    /// <summary>Field number for the "miniwebProcessIsRunning" field.</summary>
    public const int MiniwebProcessIsRunningFieldNumber = 2;
    private bool miniwebProcessIsRunning_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MiniwebProcessIsRunning {
      get { return miniwebProcessIsRunning_; }
      set {
        miniwebProcessIsRunning_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetailedEvaluation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetailedEvaluation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinimegaProcessIsRunning != other.MinimegaProcessIsRunning) return false;
      if (MiniwebProcessIsRunning != other.MiniwebProcessIsRunning) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MinimegaProcessIsRunning != false) hash ^= MinimegaProcessIsRunning.GetHashCode();
      if (MiniwebProcessIsRunning != false) hash ^= MiniwebProcessIsRunning.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MinimegaProcessIsRunning != false) {
        output.WriteRawTag(8);
        output.WriteBool(MinimegaProcessIsRunning);
      }
      if (MiniwebProcessIsRunning != false) {
        output.WriteRawTag(16);
        output.WriteBool(MiniwebProcessIsRunning);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MinimegaProcessIsRunning != false) {
        size += 1 + 1;
      }
      if (MiniwebProcessIsRunning != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetailedEvaluation other) {
      if (other == null) {
        return;
      }
      if (other.MinimegaProcessIsRunning != false) {
        MinimegaProcessIsRunning = other.MinimegaProcessIsRunning;
      }
      if (other.MiniwebProcessIsRunning != false) {
        MiniwebProcessIsRunning = other.MiniwebProcessIsRunning;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinimegaProcessIsRunning = input.ReadBool();
            break;
          }
          case 16: {
            MiniwebProcessIsRunning = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConfigurationUpdate : pb::IMessage<ConfigurationUpdate> {
    private static readonly pb::MessageParser<ConfigurationUpdate> _parser = new pb::MessageParser<ConfigurationUpdate>(() => new ConfigurationUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigurationUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modulespecific.ModuleSpecificReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigurationUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigurationUpdate(ConfigurationUpdate other) : this() {
      filePath_ = other.filePath_;
      namespace_ = other.namespace_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigurationUpdate Clone() {
      return new ConfigurationUpdate(this);
    }

    /// <summary>Field number for the "filePath" field.</summary>
    public const int FilePathFieldNumber = 1;
    private string filePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 2;
    private string namespace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Namespace {
      get { return namespace_; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigurationUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigurationUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FilePath != other.FilePath) return false;
      if (Namespace != other.Namespace) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (Namespace.Length != 0) hash ^= Namespace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FilePath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FilePath);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Namespace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (Namespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigurationUpdate other) {
      if (other == null) {
        return;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      if (other.Namespace.Length != 0) {
        Namespace = other.Namespace;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FilePath = input.ReadString();
            break;
          }
          case 18: {
            Namespace = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomCommand : pb::IMessage<CustomCommand> {
    private static readonly pb::MessageParser<CustomCommand> _parser = new pb::MessageParser<CustomCommand>(() => new CustomCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modulespecific.ModuleSpecificReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomCommand(CustomCommand other) : this() {
      body_ = other.body_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomCommand Clone() {
      return new CustomCommand(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private string body_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Body != other.Body) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Body.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomCommand other) {
      if (other == null) {
        return;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Body = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Confirmation : pb::IMessage<Confirmation> {
    private static readonly pb::MessageParser<Confirmation> _parser = new pb::MessageParser<Confirmation>(() => new Confirmation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Confirmation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Modulespecific.ModuleSpecificReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Confirmation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Confirmation(Confirmation other) : this() {
      completed_ = other.completed_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Confirmation Clone() {
      return new Confirmation(this);
    }

    /// <summary>Field number for the "completed" field.</summary>
    public const int CompletedFieldNumber = 1;
    private bool completed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 2;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Confirmation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Confirmation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Completed != other.Completed) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Completed != false) hash ^= Completed.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Completed != false) {
        output.WriteRawTag(8);
        output.WriteBool(Completed);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Completed != false) {
        size += 1 + 1;
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Confirmation other) {
      if (other == null) {
        return;
      }
      if (other.Completed != false) {
        Completed = other.Completed;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Completed = input.ReadBool();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
